#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from subprocess import run
import logger_wrapper


def _load_configs():
    import os
    filename = os.path.join(os.environ['HOME'], '.config', 'oc', 'config.yml')

    if not os.path.exists(filename):
        raise Exception(f'Config file "{filename}" not found')

    with open(filename) as file:
        import yaml
        return yaml.safe_load(file)


def parse_command_line(default_profile):
    '''
    Reference: https://docs.python.org/3/library/argparse.html
    '''
    from argparse import ArgumentParser

    parser = ArgumentParser(description='Openshift login script')

    parser.add_argument(
            '--profile',
            '-p',
            default=default_profile,
            help=f'Profile to use to connect (default: {default_profile})')

    parser.add_argument(
            '--echo',
            action='store_true',
            help='Just echo the command to be executed')

    logger_wrapper.make_verbosity_argument(parser)

    return parser.parse_args()


def main():
    import shutil
    if not shutil.which('oc'):
        raise Exception('"oc" command not found, exiting...')

    global args

    config_file = _load_configs()

    args = parse_command_line(config_file.get('default', 'hlg'))

    logger_wrapper.configure(args.verbosity)
    global logger
    logger = logger_wrapper.get(__name__)

    if args.profile not in config_file:
        raise Exception(f'Profile "{args.profile}" not found in config file')

    print(f'Logging with profile "{args.profile}"')

    configs = config_file[args.profile]

    command = 'oc login' \
        ' --server=https://{host}:{port}' \
        ' --insecure-skip-tls-verify' \
        ' --username {username}' \
        ' --password {password}'.format(**configs).split(' ')

    logger.info(f'Running "{" ".join(command)}"')

    if args.echo:
        print(' '.join(command))
    else:
        run(command)

    return 0


if __name__ == '__main__':
    returncode = main() or 0

    exit(returncode)
